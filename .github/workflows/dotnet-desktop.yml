name: Unit Testing in .NET with XUnit and MoQ

on:
  push:
    branches:
    - "main"
  pull_request:
    branches:
    - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Check out
        uses: actions/checkout@v3

      - name: Build and test done folder
        run: |
          cd done
          dotnet restore
          # dotnet tool install -g dotnet-reportgenerator-globaltool
          dotnet build
          dotnet test --logger "junit;LogFilePath=../results/test-results.xml"  --collect:"XPLat Code Coverage"
          # reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:."

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.5
        with:
          reports: "**/coverage.cobertura.xml"
          targetdir: "done/results"
          reporttypes: Html;Html_Dark

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: done/results
          
      - name: Download Code Coverage Report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
          path: done/results

      - name: Extract Code Coverage Report
        run: |
              unzip done/results/code-coverage-report.zip -d extracted-report

      - name: Upload Extracted Report
        uses: actions/upload-artifact@v2
        with:
          name: extracted-code-coverage
          path: extracted-report
          


          
          

        

