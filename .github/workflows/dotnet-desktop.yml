name: Unit Testing in .NET with XUnit and MoQ

on:
  push:
    branches:
    - "main"
  pull_request:
    branches:
    - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Check out
        uses: actions/checkout@v4

      #- name: Restore coverage history
      #  uses: dawidd6/action-download-artifact@v3
      #  with:
      #    name: CoverageHistory
      #    path: CoverageHistory
      #    continue-on-error: true

      - name: Build and test done folder
        run: |
          cd done
          dotnet restore

          dotnet build
          dotnet test --logger "junit;LogFilePath=../results/test-results.xml"  --collect:"XPLat Code Coverage"   

      - name: Generate Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: "${{ github.workspace }}/**/*coverage.cobertura.xml"
          sourcedirs: "${{ github.workspace }}/"
          license: ewogICJMaWNlbnNlIjogewogICAgIklkIjogImZmODBkNzgzLWZmYjEtNDYwNi05OGYzLTYzYjMxNjgyYjQxMSIsCiAgICAiTG9naW4iOiAiZmY4MGQ3ODMtZmZiMS00NjA2LTk4ZjMtNjNiMzE2ODJiNDExIiwKICAgICJOYW1lIjogIlRvcmUgQXVyc3RhZCIsCiAgICAiRW1haWwiOiAidG9yZS5hdXJzdGFkQGdtYWlsLmNvbSIsCiAgICAiTGljZW5zZVR5cGUiOiAiVHJpYWwiLAogICAgIklzc3VlZEF0IjogIjIwMjQtMDYtMjhUMDE6MTc6MTIuNTQyNjQ0NloiLAogICAgIkV4cGlyZXNBdCI6ICIyMDI0LTA3LTA5VDAwOjAwOjAwWiIKICB9LAogICJTaWduYXR1cmUiOiAiQzhjT1l4LzdQYlRyTHNsbTNXZmo2clVpUjNxdEVRMFNZZ0RQQUJqUjVOa3o5bzJHYURXWThvZGR1XHUwMDJCTmVvSEhBYXVTOXA3d0k1cE02TDM3ZHZQRVRsaW0wWm5rSXBBT3BhTldIZmE1SlVUR0ZzWWJ3UENWcVZRWGV3dmRmWjA2aVh2XHUwMDJCUzFsTDUxb1VLVXJnWXp1NmMvcUFSQ2xqa01ZYjRiVmNQd1h6QlJJV0E0N01LeGNiMzFaUkxSVnhLRWJvcHgvZkJJR2FSdEJScjlyaXA4RGR3UzROc0plOVlkaERKZk5wbXV0dlx1MDAyQno2V1ZtNmNDVzBhLzYwSWZwUWN0TUNqZkRuWElMUWpYRlBSRnloZWtRTXJxRU1UMVc3bFJhSmNrNzdIU21BMjNwVXQ2OEMxMFlYM3R3NmttTklSMGUzeXNwaGluOEV0cFB0NXNXRVZlRExrMUlnPT0iCn0=
          targetdir: coveragereport_${{ github.run_number }}
          reporttypes: 'MarkdownSummaryGithub'

           
      - name: Test Report
        uses: dorny/test-reporter@v1 
        if: always()
        with:
          name: test-results
          path: "done/results/**/*.xml"
          reporter: java-junit

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoberturaCoverageReport # Artifact name        
          path: coveragereport_${{ github.run_number }} # Directory containing files to upload

      - name: Publish coverage in build summary # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        run: cat coveragereport_${{ github.run_number }}/SummaryGithub.md >> $GITHUB_STEP_SUMMARY # Adjust path and filename if necessary
        shell: bash


          


          
          

        

